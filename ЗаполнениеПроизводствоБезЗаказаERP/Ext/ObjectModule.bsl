Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке(СтандартныеПодсистемыСервер.ВерсияБиблиотеки());
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка();
	ПараметрыРегистрации.Версия = "1.0.0.0";
	ПараметрыРегистрации.БезопасныйРежим = Ложь;
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = НСтр("ru = 'Заполнение документа ПроизводствоБезЗаказа'");
	НоваяКоманда.Идентификатор = "ЗаполнениеПроизводствоБезЗаказа";
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	НоваяКоманда.ПоказыватьОповещение = Истина;
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура ЗаполнитьНаСервереПроизводствоБезЗаказа(СтруктураПараметров, АдресРезультата) Экспорт

	РезультатОбработки = Новый Структура("КоличествоДокументов,СписокОшибок");
	СписокОшибок = Новый Массив;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПроизводствоБезЗаказа.Ссылка КАК Ссылка,
		|	ПроизводствоБезЗаказа.Подразделение КАК Подразделение
		|ИЗ
		|	Документ.ПроизводствоБезЗаказа КАК ПроизводствоБезЗаказа
		|ГДЕ
		|	ПроизводствоБезЗаказа.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ПроизводствоБезЗаказа.Проведен = Истина";
	Если ЗначениеЗаполнено(СтруктураПараметров.Подразделение) Тогда
		Запрос.Текст = Запрос.Текст + "	И ПроизводствоБезЗаказа.Подразделение = &Подразделение";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаНачала", СтруктураПараметров.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", СтруктураПараметров.ДатаОкончания);
	Если ЗначениеЗаполнено(СтруктураПараметров.Подразделение) Тогда
		Запрос.УстановитьПараметр("Подразделение", СтруктураПараметров.Подразделение);
	КонецЕсли;
	Выборка = Запрос.Выполнить().Выбрать();
	Записано = 0;
	ВсегоДокументов = Выборка.Количество();
	Итерация = 0;

	Пока Выборка.Следующий() Цикл
		ТекущийПроцентВыполнения = Окр(100 * Итерация / ВсегоДокументов, 0);
		Итерация = Итерация + 1;
		ДлительныеОперации.СообщитьПрогресс(ТекущийПроцентВыполнения, 
			СтрШаблон("Обрабатывается документ №%1 из %2", Итерация, ВсегоДокументов));
		Документ = Выборка.Ссылка.ПолучитьОбъект();
		
		//1. Формируем сгруппированые строки из табл. части ВыходныеИзделия с итогами без номеров групп затрат,
		ЗапросВИ = Новый Запрос;
		ЗапросВИ.Текст = 
		"ВЫБРАТЬ
		|	ПроизводствоБезЗаказаВыходныеИзделия.Ссылка КАК Ссылка,
		|	ПроизводствоБезЗаказаВыходныеИзделия.НаправлениеВыпуска КАК НаправлениеВыпуска,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Получатель КАК Получатель,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Номенклатура КАК Номенклатура,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Характеристика КАК Характеристика,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Серия КАК Серия,
		|	ПроизводствоБезЗаказаВыходныеИзделия.СтатусУказанияСерий КАК СтатусУказанияСерий,
		|	СУММА(ПроизводствоБезЗаказаВыходныеИзделия.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	СУММА(ПроизводствоБезЗаказаВыходныеИзделия.Количество) КАК Количество,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Упаковка КАК Упаковка,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Цена КАК Цена,
		|	СУММА(ПроизводствоБезЗаказаВыходныеИзделия.Сумма) КАК Сумма,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Спецификация КАК Спецификация,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Назначение КАК Назначение,
		|	ПроизводствоБезЗаказаВыходныеИзделия.ДоляСтоимости КАК ДоляСтоимости,
		|	ПроизводствоБезЗаказаВыходныеИзделия.ДоляСтоимостиНаЕдиницу КАК ДоляСтоимостиНаЕдиницу,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Подразделение КАК Подразделение,
		|	ПроизводствоБезЗаказаВыходныеИзделия.АналитикаРасходов КАК АналитикаРасходов,
		|	ПроизводствоБезЗаказаВыходныеИзделия.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
		|	ПроизводствоБезЗаказаВыходныеИзделия.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ПроизводствоБезЗаказаВыходныеИзделия.НастройкаСчетовУчета КАК НастройкаСчетовУчета,
		|	ПроизводствоБезЗаказаВыходныеИзделия.ОформитьОтчетДавальцу КАК ОформитьОтчетДавальцу,
		|	ПроизводствоБезЗаказаВыходныеИзделия.ВнутренняяПереработка КАК ВнутренняяПереработка,
		|	ПроизводствоБезЗаказаВыходныеИзделия.ОрганизацияДавалец КАК ОрганизацияДавалец
		|ИЗ
		|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ПроизводствоБезЗаказаВыходныеИзделия
		|ГДЕ
		|	ПроизводствоБезЗаказаВыходныеИзделия.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПроизводствоБезЗаказаВыходныеИзделия.Ссылка,
		|	ПроизводствоБезЗаказаВыходныеИзделия.НаправлениеВыпуска,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Получатель,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Номенклатура,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Характеристика,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Серия,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Упаковка,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Цена,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Сумма,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Спецификация,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Назначение,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Подразделение,
		|	ПроизводствоБезЗаказаВыходныеИзделия.АналитикаРасходов,
		|	ПроизводствоБезЗаказаВыходныеИзделия.АналитикаАктивовПассивов,
		|	ПроизводствоБезЗаказаВыходныеИзделия.АналитикаУчетаНоменклатуры,
		|	ПроизводствоБезЗаказаВыходныеИзделия.НастройкаСчетовУчета,
		|	ПроизводствоБезЗаказаВыходныеИзделия.ОформитьОтчетДавальцу,
		|	ПроизводствоБезЗаказаВыходныеИзделия.ВнутренняяПереработка,
		|	ПроизводствоБезЗаказаВыходныеИзделия.ОрганизацияДавалец,
		|	ПроизводствоБезЗаказаВыходныеИзделия.СтатусУказанияСерий,
		|	ПроизводствоБезЗаказаВыходныеИзделия.ДоляСтоимости,
		|	ПроизводствоБезЗаказаВыходныеИзделия.ДоляСтоимостиНаЕдиницу";
		
		ЗапросВИ.УстановитьПараметр("Ссылка", Выборка.Ссылка);
		ВыборкаВИ = ЗапросВИ.Выполнить().Выбрать();
		Документ.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Документ.ВыходныеИзделия.Очистить();
		Документ.МатериалыИРаботы.Очистить();
		НомерГруппыЗатрат = 1;
		Пока ВыборкаВИ.Следующий() Цикл
			СтрокаВыходныеИзделия = Документ.ВыходныеИзделия.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаВыходныеИзделия, ВыборкаВИ);
			СтрокаВыходныеИзделия.НомерГруппыЗатрат = НомерГруппыЗатрат;
			СтрокаВыходныеИзделия.КодСтроки = НомерГруппыЗатрат;
			СтрокаВыходныеИзделия.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
			//2. Запросом получаем массив значений номеров групп затрат по каждой сгруппированной строке
			ЗапросНГ = Новый Запрос;
			ЗапросНГ.Текст = 
				"ВЫБРАТЬ
				|	ПроизводствоБезЗаказаВыходныеИзделия.НомерГруппыЗатрат КАК НомерГруппыЗатрат
				|ИЗ
				|	Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ПроизводствоБезЗаказаВыходныеИзделия
				|ГДЕ
				|	ПроизводствоБезЗаказаВыходныеИзделия.Ссылка = &Ссылка
				|	И ПроизводствоБезЗаказаВыходныеИзделия.НаправлениеВыпуска = &НаправлениеВыпуска
				|	И ПроизводствоБезЗаказаВыходныеИзделия.Получатель = &Получатель
				|	И ПроизводствоБезЗаказаВыходныеИзделия.Номенклатура = &Номенклатура
				|	И ПроизводствоБезЗаказаВыходныеИзделия.Характеристика = &Характеристика
				|	И ПроизводствоБезЗаказаВыходныеИзделия.Серия = &Серия
				|	И ПроизводствоБезЗаказаВыходныеИзделия.СтатусУказанияСерий = &СтатусУказанияСерий
				|	И ПроизводствоБезЗаказаВыходныеИзделия.Цена = &Цена
				|	И ПроизводствоБезЗаказаВыходныеИзделия.Спецификация = &Спецификация
				|	И ПроизводствоБезЗаказаВыходныеИзделия.Назначение = &Назначение
				|	И ПроизводствоБезЗаказаВыходныеИзделия.Подразделение = &Подразделение
				|	И ПроизводствоБезЗаказаВыходныеИзделия.АналитикаРасходов = &АналитикаРасходов
				|	И ПроизводствоБезЗаказаВыходныеИзделия.АналитикаАктивовПассивов = &АналитикаАктивовПассивов
				|	И ПроизводствоБезЗаказаВыходныеИзделия.АналитикаУчетаНоменклатуры = &АналитикаУчетаНоменклатуры
				|	И ПроизводствоБезЗаказаВыходныеИзделия.НастройкаСчетовУчета = &НастройкаСчетовУчета
				|	И ПроизводствоБезЗаказаВыходныеИзделия.ОформитьОтчетДавальцу = &ОформитьОтчетДавальцу
				|	И ПроизводствоБезЗаказаВыходныеИзделия.ВнутренняяПереработка = &ВнутренняяПереработка
				|	И ПроизводствоБезЗаказаВыходныеИзделия.ОрганизацияДавалец = &ОрганизацияДавалец";
			
			ЗапросНГ.УстановитьПараметр("АналитикаАктивовПассивов", ВыборкаВИ.АналитикаАктивовПассивов);
			ЗапросНГ.УстановитьПараметр("АналитикаРасходов", ВыборкаВИ.АналитикаРасходов);
			ЗапросНГ.УстановитьПараметр("АналитикаУчетаНоменклатуры", ВыборкаВИ.АналитикаУчетаНоменклатуры);
			ЗапросНГ.УстановитьПараметр("ВнутренняяПереработка", ВыборкаВИ.ВнутренняяПереработка);
			ЗапросНГ.УстановитьПараметр("Назначение", ВыборкаВИ.Назначение);
			ЗапросНГ.УстановитьПараметр("НаправлениеВыпуска", ВыборкаВИ.НаправлениеВыпуска);
			ЗапросНГ.УстановитьПараметр("НастройкаСчетовУчета", ВыборкаВИ.НастройкаСчетовУчета);
			ЗапросНГ.УстановитьПараметр("Номенклатура", ВыборкаВИ.Номенклатура);
			ЗапросНГ.УстановитьПараметр("ОрганизацияДавалец", ВыборкаВИ.ОрганизацияДавалец);
			ЗапросНГ.УстановитьПараметр("ОформитьОтчетДавальцу", ВыборкаВИ.ОформитьОтчетДавальцу);
			ЗапросНГ.УстановитьПараметр("Подразделение", ВыборкаВИ.Подразделение);
			ЗапросНГ.УстановитьПараметр("Получатель", ВыборкаВИ.Получатель);
			ЗапросНГ.УстановитьПараметр("Серия", ВыборкаВИ.Серия);
			ЗапросНГ.УстановитьПараметр("Спецификация", ВыборкаВИ.Спецификация);
			ЗапросНГ.УстановитьПараметр("Ссылка", ВыборкаВИ.Ссылка);
			ЗапросНГ.УстановитьПараметр("СтатусУказанияСерий", ВыборкаВИ.СтатусУказанияСерий);
			ЗапросНГ.УстановитьПараметр("Характеристика", ВыборкаВИ.Характеристика);
			ЗапросНГ.УстановитьПараметр("Цена", ВыборкаВИ.Цена);	
			
			МассивНомеровГруппы = ЗапросНГ.Выполнить().Выгрузить().ВыгрузитьКолонку("НомерГруппыЗатрат");
			
			//3. Запросом получаем сгруппированные строки из табл. части МатериалыИРаботы по условию что номера групп
			//входят в массив значений по п.2.
			ЗапросМР = Новый Запрос;
			ЗапросМР.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПроизводствоБезЗаказаМатериалыИРаботы.Ссылка КАК Ссылка,
			|	ПроизводствоБезЗаказаМатериалыИРаботы.Склад КАК Склад,
			|	ПроизводствоБезЗаказаМатериалыИРаботы.Номенклатура КАК Номенклатура,
			|	ПроизводствоБезЗаказаМатериалыИРаботы.Характеристика КАК Характеристика,
			|	СУММА(ПроизводствоБезЗаказаМатериалыИРаботы.КоличествоУпаковок) КАК КоличествоУпаковок,
			|	СУММА(ПроизводствоБезЗаказаМатериалыИРаботы.Количество) КАК Количество,
			|	ПроизводствоБезЗаказаМатериалыИРаботы.Упаковка КАК Упаковка,
			|	ПроизводствоБезЗаказаМатериалыИРаботы.Назначение КАК Назначение,
			|	ПроизводствоБезЗаказаМатериалыИРаботы.Серия КАК Серия,
			|	ПроизводствоБезЗаказаМатериалыИРаботы.Подразделение КАК Подразделение,
			|	ПроизводствоБезЗаказаМатериалыИРаботы.СтатусУказанияСерий КАК СтатусУказанияСерий,
			|	ПроизводствоБезЗаказаМатериалыИРаботы.СтатьяКалькуляции КАК СтатьяКалькуляции,
			|	ПроизводствоБезЗаказаМатериалыИРаботы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
			|ИЗ
			|	Документ.ПроизводствоБезЗаказа.МатериалыИРаботы КАК ПроизводствоБезЗаказаМатериалыИРаботы
			|ГДЕ
			|	ПроизводствоБезЗаказаМатериалыИРаботы.Ссылка = &Ссылка
			|  	И ПроизводствоБезЗаказаМатериалыИРаботы.НомерГруппыЗатрат В (&НомераГруппыЗатрат)
			|СГРУППИРОВАТЬ ПО
			|	ПроизводствоБезЗаказаМатериалыИРаботы.Ссылка,
			|	ПроизводствоБезЗаказаМатериалыИРаботы.Склад,
			|	ПроизводствоБезЗаказаМатериалыИРаботы.Номенклатура,
			|	ПроизводствоБезЗаказаМатериалыИРаботы.Характеристика,
			|	ПроизводствоБезЗаказаМатериалыИРаботы.Упаковка,
			|	ПроизводствоБезЗаказаМатериалыИРаботы.Назначение,
			|	ПроизводствоБезЗаказаМатериалыИРаботы.Серия,
			|	ПроизводствоБезЗаказаМатериалыИРаботы.Подразделение,
			|	ПроизводствоБезЗаказаМатериалыИРаботы.СтатусУказанияСерий,
			|	ПроизводствоБезЗаказаМатериалыИРаботы.СтатьяКалькуляции,
			|	ПроизводствоБезЗаказаМатериалыИРаботы.АналитикаУчетаНоменклатуры";
			ЗапросМР.УстановитьПараметр("Ссылка", Выборка.Ссылка);
			ЗапросМР.УстановитьПараметр("НомераГруппыЗатрат", МассивНомеровГруппы);
			ВыборкаМР = ЗапросМР.Выполнить().Выбрать();
			Пока ВыборкаМР.Следующий() Цикл
			
				СтрокаМатериалыИРаботы = Документ.МатериалыИРаботы.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаМатериалыИРаботы, ВыборкаМР);
				СтрокаМатериалыИРаботы.НомерГруппыЗатрат = НомерГруппыЗатрат;
				СтрокаМатериалыИРаботы.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
			КонецЦикла;
			НомерГруппыЗатрат = НомерГруппыЗатрат + 1;
		КонецЦикла;
		НачатьТранзакцию();
		Попытка
			Документ.Записать(РежимЗаписиДокумента.Проведение);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			НоваяСтрока = Новый Структура("Документ, Ошибка", Выборка.Ссылка, ОписаниеОшибки());
			СписокОшибок.Добавить(НоваяСтрока);
			Продолжить;
		КонецПопытки;	
		
		Записано = Записано + 1;
	КонецЦикла;
	РезультатОбработки.КоличествоДокументов = Записано;
	РезультатОбработки.СписокОшибок = СписокОшибок;
	ПоместитьВоВременноеХранилище(РезультатОбработки, АдресРезультата);

КонецПроцедуры
